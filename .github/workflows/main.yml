name: Release Creation

on:
  release:
    types: [published]

env:
  node_version: 16

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Build JS
        run: npm run build

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "dist/module.json"
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Create a zip file with all files required by the module to add to the release
      - run: zip -q module.zip -r dist

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./dist/module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      # Publish types to npm
      - name: Publish
        run: npm publish
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
